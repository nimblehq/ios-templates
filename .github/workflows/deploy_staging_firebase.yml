name: Deploy Staging Build To Firebase

# SECRETS needed:
### SSH_PRIVATE_KEY for Match Repo
### MATCH_PASS
### FIREBASE_TOKEN

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run SwiftLint
      uses: norio-nomura/action-swiftlint@3.1.0
      with:
        args: --strict

  build:
    name: Build
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
    # Set fetch-depth (default: 1) to get whole tree
      with:
        fetch-depth: 0

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install Firebase-Tools
      run: |
        yarn global add firebase-tools
        echo "$(yarn global bin)" >> $GITHUB_PATH

    - name: Setup ENV file
      env:
        ENV: ${{ secrets.ENV }}
      run: |
        touch .env
        echo $ENV | base64 --decode > .env

    - name: Bundle install
      # if: steps.bundleCache.outputs.cache-hit != 'true'
      run: bundle install
      
    - name: Run Arkana
      run: bundle exec arkana

    - name: Cache Pods
      uses: actions/cache@v2
      id: cocoapodCache
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install Pods Dependencies
      run: bundle exec pod install
      shell: bash

    - uses: yanamura/ios-bump-version@v1
      with:
        build-number: ${{github.run_number}}

    - name: Build and Test
      run: bundle exec fastlane buildAndTest

    - name: Match Ad-hoc
      run: bundle exec fastlane syncAdHocStagingCodeSigning
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASS }}

    - name: Build App and Distribute to Firebase
      run: bundle exec fastlane buildStagingAndUploadToFirebase
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ format('v{0}({1})-{2}', env.VERSION_NUMBER, env.BUILD_NUMBER, env.TAG_TYPE) }}
        path: |
          ${{ env.IPA_OUTPUT_PATH }}
          ${{ env.DSYM_OUTPUT_PATH }}
      env:
        TAG_TYPE: Staging_Firebase

    - name: Remove keychain
      if: ${{ always() }}
      run: bundle exec fastlane removeKeychain
      continue-on-error: true
