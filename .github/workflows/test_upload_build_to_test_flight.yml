name: Test Upload Build to TestFlight

# SECRETS needed:
### SSH_PRIVATE_KEY for Match Repo
### MATCH_REPO
### MATCH_PASS
### API_KEY_ID
### ISSUER_ID
### APPSTORE_CONNECT_API_KEY
### TEAM_ID

on:
  pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
    - name: Determine Runner Port
      id: runner_port
      run: |
        last_char=$(echo "${{ runner.name }}" | tail -c 2 | head -c 1)
        if [ "$last_char" = "1" ]; then
          echo "runner_port=2000" >> $GITHUB_ENV
          echo "test_device=iPhone 14 Pro Max" >> $GITHUB_ENV
        else
          echo "runner_port=2001" >> $GITHUB_ENV
          echo "test_device=iPhone SE (3rd generation)" >> $GITHUB_ENV
        fi
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Bundle install
      run: bundle install

    - name: Cache Pods
      uses: actions/cache@v3
      id: cocoapodCache
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Start Install Script for Template App
      run: sh make.sh --bundle-id co.nimblehq.ios.templates --bundle-id-staging co.nimblehq.ios.templates.staging --project-name TemplateApp --interface UIKit

    - name: Start Setup Script for Template App TestFlight Upload
      run: sh set_up_test_testflight.sh
      env:
        MATCH_REPO: ${{ secrets.MATCH_REPO }}
        API_KEY_ID: ${{ secrets.API_KEY_ID }}
        ISSUER_ID: ${{ secrets.ISSUER_ID }}
        TEAM_ID: ${{ secrets.TEAM_ID }}

    - name: Set Up Test Project for App Store
      run: |
       bundle exec fastlane setUpTestProject --swift_server_port ${{ env.runner_port }}

    - name: Sync App Store Code Signing
      run: |
       bundle exec fastlane syncAppStoreCodeSigning --swift_server_port ${{ env.runner_port }}
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASS }}

    - name: Build App and Distribute to AppStore
      run: |
       bundle exec fastlane buildAndUploadToAppStore --swift_server_port ${{ env.runner_port }}
      env:
        APPSTORE_CONNECT_API_KEY: ${{ secrets.APPSTORE_CONNECT_API_KEY }}
        API_KEY_ID: ${{ secrets.API_KEY_ID }}
        ISSUER_ID: ${{ secrets.ISSUER_ID }}
        SKIP_FIREBASE_DSYM: "true"
        BUMP_APP_STORE_BUILD_NUMBER: "true"
