name: Deploy Production Build To Firebase

# SECRETS needed:
### SSH_PRIVATE_KEY for Match Repo
### MATCH_PASS
### FIREBASE_GOOGLE_APPLICATION_CREDENTIALS_BASE64

on:
  push:
    branches: [ release/** ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Create Release Note
      run: |
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "$(git log -1 | grep -o "\[.*")" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Run SwiftLint
      uses: docker://norionomura/swiftlint:0.53.0_swift-5.7
      with:
        args: swiftlint --strict

  build:
    name: Build
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
    # Set fetch-depth (default: 1) to get whole tree
      with:
        fetch-depth: 0

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Setup ENV file
      env:
        ENV: ${{ secrets.ENV }}
      run: |
        touch .env
        echo $ENV | base64 --decode > .env

    - name: Read Google Service Account
      id: firebase_service_account
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'firebase_service_account.json'
        encodedString: ${{ secrets.FIREBASE_GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}

    - name: Bundle install
      run: bundle install
      
    - name: Run Arkana
      run: bundle exec arkana

    - name: Cache Pods
      uses: actions/cache@v3
      id: cocoapodCache
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install Pods Dependencies
      run: bundle exec pod install
      shell: bash

    - name: Build and Test
      run: bundle exec fastlane buildAndTest

    - name: Match Ad-hoc
      run: bundle exec fastlane syncAdHocProductionCodeSigning
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASS }}

    - name: Build Production App and Distribute to Firebase
      run: bundle exec fastlane buildProductionAndUploadToFirebase
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.firebase_service_account.outputs.filePath }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ format('v{0}({1})-{2}', env.VERSION_NUMBER, env.BUILD_NUMBER, env.TAG_TYPE) }}
        path: |
          ${{ env.IPA_OUTPUT_PATH }}
          ${{ env.DSYM_OUTPUT_PATH }}
      env:
        TAG_TYPE: Production_Firebase

    - name: Remove keychain
      if: ${{ always() }}
      run: bundle exec fastlane removeKeychain
      continue-on-error: true
